# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- group: global-variables

stages: 
  - stage: Build
    jobs:
    - job: BuildPowershell
      pool: IAC_Agents
      steps:
      - task: PowerShell@2
        inputs:
          filePath: '$(Build.Repository.LocalPath)\build.ps1'
        displayName: Build
      - task: CopyFiles@2
        displayName: 'Copy scripts'
        inputs:
          contents: 'PackageOutput/**'
          targetFolder: '$(Build.ArtifactStagingDirectory)'

      - publish:
        displayName: 'Publish Artifacts'
        artifact: drop
  
  - stage: DeploymentTest
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
    dependsOn: Build
    jobs:
    - deployment: DeploymentPowershell
      pool: IAC_Agents
      environment: Test
      strategy: 
       runOnce:
        deploy: 
          steps:
          - task: PowerShell@2
            displayName: 'PowerShell Script'
            inputs:
              targetType: filePath
              filePath: '$(Pipeline.Workspace)\drop\deployment.ps1'
              arguments: $(Pipeline.Workspace)\drop $(GoCServer) $(GoCPort)
  
  - stage: DeploymentRelease
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    dependsOn: Build
    jobs:
    - deployment: DeploymentPowershell
      pool: IAC_Agents
      environment: Test
      strategy: 
       runOnce:
        deploy: 
          steps:
          - task: PowerShell@2
            displayName: 'PowerShell Script'
            inputs:
              targetType: filePath
              filePath: '$(Pipeline.Workspace)\drop\deployment.ps1'
              arguments: $(Pipeline.Workspace)\drop $(GoCServer) $(GoCPort)
