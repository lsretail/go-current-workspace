# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- group: global-variables

stages: 
  - stage: Build
    jobs:
    - job: BuildPowershell
      pool: IAC_Agents
      steps:
      - task: PowerShell@2
        inputs:
          filePath: '$(Build.Repository.LocalPath)\build.ps1'
        displayName: Build
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            
            Write-Host "Hello World"
            Get-ChildItem -Path "$(Build.Repository.LocalPath)"
  
  - stage: Deployment Test
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
    - deployment: DeploymentPowershell
      pool: IAC_Agents
      environment: Test
      strategy: 
       runOnce:
        deploy: 
          steps:
          - task: PowerShell@2
            displayName: 'PowerShell Script'
            inputs:
              targetType: filePath
              filePath: '$(Build.ArtifactStagingDirectory)\deployment.ps1'
              arguments: $(Build.ArtifactStagingDirectory) $(GoCServer) $(GoCPort)
  
  - stage: Deployment Release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
    - deployment: DeploymentPowershell
      pool: IAC_Agents
      environment: Release
      strategy: 
       runOnce:
        deploy: 
          steps:
          - task: PowerShell@2
            displayName: 'PowerShell Script'
            inputs:
              targetType: filePath
              filePath: '$(Build.ArtifactStagingDirectory)\deployment.ps1'
              arguments: $(Build.ArtifactStagingDirectory) $(GoCServer) $(GoCPort)
